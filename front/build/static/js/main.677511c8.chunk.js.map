{"version":3,"sources":["Components/connectWalletPage.js","constants/chains.js","constants/coins.js","ethereumFunctions.js","network.js","NavBar/MenuItems.js","NavBar/NavBar.js","Components/SmartAccountConnect.js","CoinSwapper/CoinField.js","CoinSwapper/CoinButton.js","CoinSwapper/CoinDialog.js","Components/LoadingButton.js","Components/wrongNetwork.js","CoinSwapper/CoinSwapper.js","Liquidity/SwitchButton.js","Liquidity/LiquidityFunctions.js","Liquidity/LiquidityDeployer.js","Liquidity/RemoveLiquidity.js","Liquidity/Liquidity.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paperContainer","borderRadius","spacing","padding","paddingBottom","maxWidth","margin","marginTop","fullWidth","width","title","textAlign","marginBottom","hr","balance","overflow","buttonIcon","marginRight","footer","ConnectWalletPage","classes","_jsxs","children","_jsx","className","Container","Paper","Typography","variant","color","Grid","container","direction","justifyContent","alignItems","href","networks","ChainId","routerAddress","Map","set","COINS","chains","name","abbr","address","ROUTER","require","ERC20","FACTORY","PAIR","getNetwork","_x","_getNetwork","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","provider","network","wrap","_context","prev","next","sent","abrupt","chainId","stop","getWeth","signer","Contract","abi","getFactory","getAccount","_getAccount","_callee3","accounts","_context3","window","ethereum","request","method","getDecimals","_x3","_getDecimals","_callee4","token","decimals","_context4","then","result","catch","error","console","log","getBalanceAndSymbol","_x4","_x5","_x6","_x7","_x8","_x9","_getBalanceAndSymbol","_callee5","accountAddress","weth_address","coins","balanceRaw","tokenDecimals","_balanceRaw","symbol","_context5","getBalance","ethers","utils","formatEther","balanceOf","Math","pow","t0","_swapTokens","_callee6","address1","address2","amount","routerContract","tokens","time","deadline","token1","amountIn","amountOut","wethAddress","_context6","floor","Date","now","BigNumber","from","parseUnits","callStatic","getAmountsOut","approve","WETH","swapExactETHForTokens","value","swapExactTokensForETH","swapExactTokensForTokens","_getAmountOut","_callee7","token1Decimals","token2","token2Decimals","values_out","amount_out","_context7","String","Number","fetchReserves","_x21","_x22","_x23","_x24","_fetchReserves","_callee8","pair","coin1","coin2","coin1Decimals","coin2Decimals","reservesRaw","results","_context8","getReserves","token0","t1","t2","t3","t4","t5","t6","t7","t8","_x25","_x26","_x27","_x28","_x29","_getReserves","_callee9","factory","pairAddress","liquidityTokens_BN","liquidityTokens","_context9","getPair","toPrecision","createTheme","palette","primary","main","contrastText","secondary","Web3Provider","props","_useState","useState","_useState2","_slicedToArray","isConnected","setConnected","Object","create","useRef","account","chainID","router","weth","backgroundListener","setupConnection","_setupConnection","providers","getSigner","_ref2","_callee2","_context2","_ref3","includes","get","factory_address","_x2","createListener","_createListener","setInterval","useEffect","listener","current","clearInterval","_Fragment","render","MenuItems","url","cName","NavBar","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","length","args","Array","_key","call","concat","state","clicked","_createClass","key","map","item","index","Link","to","Component","SmartAccountConnect","minHeight","backgroundColor","COLORS","borderColor","borderWidth","borderStyle","container_input","marginLeft","container_blank","grid","height","fab","zIndex","input","_objectSpread","typography","h5","inputBase","RemoveLiquidityField1","onClick","onChange","activeField","xs","Fab","size","ExpandMoreIcon","InputBase","placeholder","disabled","root","RemoveLiquidityField2","CoinField","button","paddingTop","coinName","opacity","CoinButton","coinAbbr","_objectWithoutProperties","_excluded","ButtonBase","focusRipple","styles","dialogContainer","titleSection","titleText","alignSelf","paddingLeft","paddingRight","coinList","overflowY","coinContainer","DialogTitle","withStyles","onClose","other","MuiDialogTitle","disableTypography","alignContent","IconButton","CloseIcon","DialogActions","MuiDialogActions","CoinDialog","open","_React$useState","_excluded2","React","_React$useState2","setAddress","_React$useState3","_React$useState4","setError","exit","Dialog","undefined","paper","TextField","e","target","helperText","coin","Button","autoFocus","err","doesTokenExist","wrapper","position","progress","green","top","left","LoadingButton","loading","valid","success","fail","type","CircularProgress","WrongNetwork","switchButton","CoinSwapper","enqueueSnackbar","useSnackbar","dialog1Open","setDialog1Open","dialog2Open","setDialog2Open","_React$useState5","_React$useState6","wrongNetworkOpen","_React$useState7","_React$useState8","setCoin1","_React$useState9","_React$useState10","setCoin2","_React$useState11","_React$useState12","reserves","setReserves","_React$useState13","_React$useState14","field1Value","setField1Value","_React$useState15","_React$useState16","field2Value","setField2Value","_React$useState17","_React$useState18","setLoading","switchFields","reverse","handleChange","field1","formatBalance","parseFloat","formatReserve","reserve","data","isNaN","_x16","_x17","_x18","_x19","_x20","getAmountOut","toFixed","coinTimeout","setTimeout","clearTimeout","SwapVerticalCircleIcon","fontSize","parsedInput1","parsedInput2","isButtonEnabled","_x10","_x11","_x12","_x13","_x14","_x15","swapTokens","message","autoHideDuration","LoopIcon","SwitchButton","setDeploy","changeStyles","K","document","getElementById","style","ButtonGroup","id","text","_addLiquidity","amount1","amount2","amount1min","amount2min","amountIn1","amountIn2","amount1Min","amount2Min","addLiquidityETH","addLiquidity","_removeLiquidity","liquidity_tokens","Getliquidity","liquidity","removeLiquidityETH","removeLiquidity","quote","reserve1","reserve2","quoteMintLiquidity","_quoteMintLiquidity","amountA","amountB","MINIMUM_LIQUIDITY","_reserveA","_reserveB","totalSupply","_yield$factory$getPai","_yield$factory$getPai2","valueA","valueB","reserveA","reserveB","_ref","_reserveA2","_reserveB2","_totalSupply","_totalSupply2","_x36","sqrt","min","_quoteAddLiquidity","amountADesired","amountBDesired","amountBOptimal","_amountOut","amountAOptimal","_amountOut2","_quoteRemoveLiquidity","feeOn","_kLast","kLast","feeLiquidity","Aout","Bout","feeTo","background","values","LiquidityDeployer","_React$useState19","_React$useState20","setLiquidityTokens","_React$useState21","_React$useState22","liquidityOut","setLiquidityOut","oldField1Value","oldField2Value","field2","NaN","_x30","quoteAddLiquidity","networksigner","AccountBalanceIcon","LiquidityRemover","tokensOut","setTokensOut","parsedInput","_x31","_x32","_x33","_x34","_x35","quoteRemoveLiquidity","ArrowDownwardIcon","Liquidity","deploy","deploy_or_remove","App","SnackbarProvider","maxSnack","ThemeProvider","NarBar","Route","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","BrowserRouter","StrictMode"],"mappings":"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","file":"static/js/main.677511c8.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Container,\n  Grid,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(1),\n    paddingBottom: theme.spacing(3),\n    maxWidth: 700,\n    margin: \"auto\",\n    marginTop: \"200px\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  hr: {\n    width: \"100%\",\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\",\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.4),\n  },\n  footer: {\n    marginTop: \"155px\",\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction ConnectWalletPage() {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className=\"Title\">\n        <h1 className=\"navbar-logo\">\n          Alternative Uniswap Interface\n        </h1>\n      </div>\n\n      <Container>\n        <Paper className={classes.paperContainer}>\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            color=\"common.white\"\n          >\n            Please connect an Ethereum wallet to your browser to use the\n            application\n          </Typography>\n        </Paper>\n      </Container>\n\n      <Grid\n        container\n        className={classes.footer}\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"flex-end\"\n      >\n        <p>\n          Alternative Uniswap Interface | Get AUT for use in the bakerloo testnet{\" \"}\n          <a href=\"https://faucet.bakerloo.autonity.network/\">here</a>\n        </p>\n      </Grid>\n    </div>\n  );\n}\n\nexport default ConnectWalletPage;\n","export const networks = [1, 3,4,5,42,123, 1337, 65110000, 65010000, 11155111]\n\nexport const ChainId = {\n  MAINNET: 1,\n  ROPSTEN: 3,\n  RINKEBY: 4,\n  GÖRLI: 5,\n  KOVAN: 42,\n  DEVNET: 65110000,\n  AUTONITY: 65010000,\n  PARASTATE: 123,\n  GANCHE: 1337,\n  SEPOLIA: 11155111\n};\n\nexport const routerAddress = new Map();\nrouterAddress.set(ChainId.MAINNET, \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\");\nrouterAddress.set(ChainId.ROPSTEN, \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\");\nrouterAddress.set(ChainId.RINKEBY, \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\");\nrouterAddress.set(ChainId.GÖRLI, \"0x3902145173758fA0859f51d917b27F7bFA17E62d\");\nrouterAddress.set(ChainId.KOVAN, \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\");\nrouterAddress.set(ChainId.DEVNET, \"0x04e555283D37aE85F6eB311fe2578F3B3f3dFc52\");\nrouterAddress.set(ChainId.AUTONITY, \"0x04e555283D37aE85F6eB311fe2578F3B3f3dFc52\");\nrouterAddress.set(ChainId.PARASTATE, \"0x07a1905D44feeA439ceFAabd11a63bEf684abE11\");\nrouterAddress.set(ChainId.GANCHE, \"0x0F44AC51198D8F99847db6C431448dBC673428f1\");\nrouterAddress.set(ChainId.SEPOLIA, \"0x046E45296De7710c6474390456bac0BeF2BB518c\");\n\n","import * as chains from './chains';\n\n// If you add coins for a new network, make sure Weth address (for the router you are using) is the first entry\n\nconst AUTONITYCoins = [\n  {\n    name: \"Auton\",\n    abbr: \"AUT\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"Newton\",\n    abbr: \"NEW\",\n    address: \"0xBd770416a3345F91E4B34576cb804a576fa48EB1\",\n  },\n  {\n    name: \"Token A\",\n    abbr: \"TA\",\n    address: \"0xD5073808CbA7d24500aa8f659B339b87945958a6\",\n  },\n  {\n    name: \"Token B\",\n    abbr: \"TB\",\n    address: \"0x908B8e60d149529d757F4aEd9320F246724f2b99\",\n  },\n  {\n    name: \"Token C\",\n    abbr: \"TC\",\n    address: \"0x03c7D835CceE5d741b3f3D144eBfC5327925ECf9\",\n  },\n  {\n    name: \"Token D\",\n    abbr: \"TD\",\n    address: \"0x90636A8bb3AD4C2168EE20CF5E6183D827Da2E91\",\n  }\n]\n\nconst DEVNETCoins = [\n  {\n    name: \"Auton\",\n    abbr: \"AUT\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"Newton\",\n    abbr: \"NEW\",\n    address: \"0xBd770416a3345F91E4B34576cb804a576fa48EB1\",\n  },\n  {\n    name: \"Token A\",\n    abbr: \"TA\",\n    address: \"0xD5073808CbA7d24500aa8f659B339b87945958a6\",\n  },\n  {\n    name: \"Token B\",\n    abbr: \"TB\",\n    address: \"0x908B8e60d149529d757F4aEd9320F246724f2b99\",\n  }\n]\n\nconst PARASTATECoins = [\n  {\n    name: \"Ether\",\n    abbr: \"ETH\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"Token A\",\n    abbr: \"TA\",\n    address: \"0x4EDFE8706Cefab9DCd52630adFFd00E9b93FF116\",\n  },\n  {\n    name: \"Token B\",\n    abbr: \"TB\",\n    address: \"0x4489D87C8440B19f11d63FA2246f943F492F3F5F\",\n  },\n  \n  {\n    name: \"Token C\",\n    abbr: \"TC\",\n    address: \"0x1d29BD2ACedBff15A59e946a4DE26d5257447727\",\n  },\n  {\n    name: \"Token D\",\n    abbr: \"TD\",\n    address: \"0xc108a13D00371520EbBeCc7DF5C8610C71F4FfbA\",\n  }\n]\n\nconst GANACHECoins = [\n  {\n    name: \"Ether\",\n    abbr: \"ETH\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"Token A\",\n    abbr: \"TA\",\n    address: \"0xE8C4BE1Bd495c984dD83B683966B7B538d3Ea82C\",\n  },\n  {\n    name: \"Token B\",\n    abbr: \"TB\",\n    address: \"0x30988e63329713c3f3FeA1ca1B94D4Abb02F78C5\",\n  },\n  \n  {\n    name: \"Token C\",\n    abbr: \"TC\",\n    address: \"0x23b4ce07ef4e2378319E40CbC0cc95EAbCf8E419\",\n  },\n  {\n    name: \"Token D\",\n    abbr: \"TD\",\n    address: \"0x49Ec3915F4daB907f7C6F74Cf5110366FCCc81A5\",\n  }\n]\n\nconst MAINNETCoins = [\n  {\n    name: \"Ether\",\n    abbr: \"ETH\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"Dai\",\n    abbr: \"DAI\",\n    address: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n  },\n  {\n    name: \"Tether USD\",\n    abbr: \"USDT\",\n    address: \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n  },\n  {\n    name: \"Ampleforth\",\n    abbr: \"AMPL\",\n    address: \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\",\n  },\n  {\n    name: \"Wrapped BTC\",\n    abbr: \"WBTC\",\n    address: \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\",\n  },\n  {\n    name: \"Fei USD\",\n    abbr: \"FEI\",\n    address: \"0x956F47F50A910163D8BF957Cf5846D573E7f87CA\",\n  },\n  {\n    name: \"frax\",\n    abbr: \"FRAX\",\n    address: \"0x853d955aCEf822Db058eb8505911ED77F175b99e\",\n  },\n  {\n    name: \"Frax Share\",\n    abbr: \"FXS\",\n    address: \"0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0\",\n  },\n  {\n    name: \"renBTC\",\n    abbr: \"renBTC\",\n    address: \"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D\",\n  },\n  {\n    name: \"StakeWise\",\n    abbr: \"SWISE\",\n    address: \"0x48C3399719B582dD63eB5AADf12A40B4C3f52FA2\",\n  },\n]\n\nconst ROPSTENCoins = [\n  {\n    name: \"Ether\",\n    abbr: \"ETH\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"Dai\",\n    abbr: \"DAI\",\n    address: \"0xad6d458402f60fd3bd25163575031acdce07538d\",\n  },\n  {\n    name: \"Tether USD\",\n    abbr: \"USDT\",\n    address: \"0x6ee856ae55b6e1a249f04cd3b947141bc146273c\",\n  },\n]\n\nconst KOVANCoins = [\n  {\n    name: \"Ether\",\n    abbr: \"ETH\",\n    address: \"\", // // Weth address is fetched from the router\n  },\n  {\n    name: \"Dai\",\n    abbr: \"DAI\",\n    address: \"0xc4375b7de8af5a38a93548eb8453a498222c4ff2\",\n  },\n  {\n    name: \"Tether USD\",\n    abbr: \"USDT\",\n    address: \"0xf3e0d7bf58c5d455d31ef1c2d5375904df525105\",\n  },\n]\n\nconst RINKEBYCoins = [\n  {\n    name: \"Ether\",\n    abbr: \"ETH\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"Dai\",\n    abbr: \"DAI\",\n    address: \"0x95b58a6bff3d14b7db2f5cb5f0ad413dc2940658\",\n  },\n  {\n    name: \"Tether USD\",\n    abbr: \"USDT\",\n    address: \"0x3b00ef435fa4fcff5c209a37d1f3dcff37c705ad\",\n  },\n]\n\nconst GÖRLICoins = [\n  {\n    name: \"Ether\",\n    abbr: \"ETH\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"Ding\",\n    abbr: \"DNG\",\n    address: \"0x4FA32AbD37E3D440EdDEAC42A8d16A94E8E24E6E\",\n  },\n  {\n    name: \"Tether USD\",\n    abbr: \"USDT\",\n    address: \"0x7FC254B12c651E0aC7708fb830181441F838a54f\",\n  },\n]\nconst SEPOLIACoins = [\n  {\n    name: \"Ether\",\n    abbr: \"ETH\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"Ding\",\n    abbr: \"DNG\",\n    address: \"0xF41A7317EB370F2090D121A3F6FE32e9407C3AD2\",\n  },\n  {\n    name: \"Tether USD\",\n    abbr: \"USDT\",\n    address: \"0x23A8415a64262ba03fc3ABD5CefaFc80842568A1\",\n  },\n]\n\nconst COINS = new Map();\nCOINS.set(chains.ChainId.MAINNET, MAINNETCoins);\nCOINS.set(chains.ChainId.ROPSTEN, ROPSTENCoins);\nCOINS.set(chains.ChainId.RINKEBY, RINKEBYCoins);\nCOINS.set(chains.ChainId.GÖRLI, GÖRLICoins);\nCOINS.set(chains.ChainId.KOVAN, KOVANCoins);\nCOINS.set(chains.ChainId.AUTONITY, AUTONITYCoins);\nCOINS.set(chains.ChainId.DEVNET, DEVNETCoins);\nCOINS.set(chains.ChainId.PARASTATE, PARASTATECoins);\nCOINS.set(chains.ChainId.GANCHE, GANACHECoins)\nCOINS.set(chains.ChainId.SEPOLIA, SEPOLIACoins)\nexport default COINS\n","import { Contract, ethers } from \"ethers\";\nimport * as chains from \"./constants/chains\";\nimport COINS from \"./constants/coins\";\n\nconst ROUTER = require(\"./build/UniswapV2Router02.json\");\nconst ERC20 = require(\"./build/ERC20.json\");\nconst FACTORY = require(\"./build/IUniswapV2Factory.json\");\nconst PAIR = require(\"./build/IUniswapV2Pair.json\");\n\nexport function getProvider() {\n  return new ethers.providers.Web3Provider(window.ethereum);\n}\n\nexport function getSigner(provider) {\n  return provider.getSigner();\n}\n\nexport async function getNetwork(provider) {\n  const network = await provider.getNetwork();\n  return network.chainId;\n}\n\nexport function getRouter(address, signer) {\n  return new Contract(address, ROUTER.abi, signer);\n}\n\nexport async function checkNetwork(provider) {\n  const chainId = getNetwork(provider);\n  if (chains.networks.includes(chainId)){\n    return true\n  }\n  return false;\n}\n\nexport function getWeth(address, signer) {\n  return new Contract(address, ERC20.abi, signer);\n}\n\nexport function getFactory(address, signer) {\n  return new Contract(address, FACTORY.abi, signer);\n}\n\nexport async function getAccount() {\n  const accounts = await window.ethereum.request({\n    method: \"eth_requestAccounts\",\n  });\n\n  return accounts[0];\n}\n\n//This function checks if a ERC20 token exists for a given address\n//    `address` - The Ethereum address to be checked\n//    `signer` - The current signer\nexport function doesTokenExist(address, signer) {\n  try {\n    return new Contract(address, ERC20.abi, signer);\n  } catch (err) {\n    return false;\n  }\n}\n\nexport async function getDecimals(token) {\n  const decimals = await token.decimals().then((result) => {\n      return result;\n    }).catch((error) => {\n      console.log('No tokenDecimals function for this token, set to 0');\n      return 0;\n    });\n    return decimals;\n}\n\n// This function returns an object with 2 fields: `balance` which container's the account's balance in the particular token,\n// and `symbol` which is the abbreviation of the token name. To work correctly it must be provided with 4 arguments:\n//    `accountAddress` - An Ethereum address of the current user's account\n//    `address` - An Ethereum address of the token to check for (either a token or AUT)\n//    `provider` - The current provider\n//    `signer` - The current signer\nexport async function getBalanceAndSymbol(\n  accountAddress,\n  address,\n  provider,\n  signer,\n  weth_address,\n  coins\n) {\n  try {\n    if (address === weth_address) {\n      const balanceRaw = await provider.getBalance(accountAddress);\n\n      return {\n        balance: ethers.utils.formatEther(balanceRaw),\n        symbol: coins[0].abbr,\n      };\n    } else {\n      const token = new Contract(address, ERC20.abi, signer);\n      const tokenDecimals = await getDecimals(token);\n      const balanceRaw = await token.balanceOf(accountAddress);\n      const symbol = await token.symbol();\n\n      return {\n        balance: balanceRaw*10**(-tokenDecimals),\n        symbol: symbol,\n      };\n    }\n  } catch (error) {\n    console.log ('The getBalanceAndSymbol function had an error!');\n    console.log (error)\n    return false;\n  }\n}\n\n// This function swaps two particular tokens / AUT, it can handle switching from AUT to ERC20 token, ERC20 token to AUT, and ERC20 token to ERC20 token.\n// No error handling is done, so any issues can be caught with the use of .catch()\n// To work correctly, there needs to be 7 arguments:\n//    `address1` - An Ethereum address of the token to trade from (either a token or AUT)\n//    `address2` - An Ethereum address of the token to trade to (either a token or AUT)\n//    `amount` - A float or similar number representing the value of address1's token to trade\n//    `routerContract` - The router contract to carry out this trade\n//    `accountAddress` - An Ethereum address of the current user's account\n//    `signer` - The current signer\nexport async function swapTokens(\n  address1,\n  address2,\n  amount,\n  routerContract,\n  accountAddress,\n  signer\n) {\n  const tokens = [address1, address2];\n  const time = Math.floor(Date.now() / 1000) + 200000;\n  const deadline = ethers.BigNumber.from(time);\n\n  const token1 = new Contract(address1, ERC20.abi, signer);\n  const tokenDecimals = await getDecimals(token1);\n  \n  const amountIn = ethers.utils.parseUnits(amount, tokenDecimals);\n  const amountOut = await routerContract.callStatic.getAmountsOut(\n    amountIn,\n    tokens\n  );\n\n  await token1.approve(routerContract.address, amountIn);\n  const wethAddress = await routerContract.WETH();\n\n  if (address1 === wethAddress) {\n    // Eth -> Token\n    await routerContract.swapExactETHForTokens(\n      amountOut[1],\n      tokens,\n      accountAddress,\n      deadline,\n      { value: amountIn }\n    );\n  } else if (address2 === wethAddress) {\n    // Token -> Eth\n    await routerContract.swapExactTokensForETH(\n      amountIn,\n      amountOut[1],\n      tokens,\n      accountAddress,\n      deadline\n    );\n  } else {\n    await routerContract.swapExactTokensForTokens(\n      amountIn,\n      amountOut[1],\n      tokens,\n      accountAddress,\n      deadline\n    );\n  }\n}\n\n//This function returns the conversion rate between two token addresses\n//    `address1` - An Ethereum address of the token to swaped from (either a token or AUT)\n//    `address2` - An Ethereum address of the token to swaped to (either a token or AUT)\n//    `amountIn` - Amount of the token at address 1 to be swaped from\n//    `routerContract` - The router contract to carry out this swap\nexport async function getAmountOut(\n  address1,\n  address2,\n  amountIn,\n  routerContract,\n  signer\n) {\n  try {\n    const token1 = new Contract(address1, ERC20.abi, signer);\n    const token1Decimals = await getDecimals(token1);\n\n    const token2 = new Contract(address2, ERC20.abi, signer);\n    const token2Decimals = await getDecimals(token2);\n\n    const values_out = await routerContract.getAmountsOut(\n      ethers.utils.parseUnits(String(amountIn), token1Decimals),\n      [address1, address2]\n    );\n    const amount_out = values_out[1]*10**(-token2Decimals);\n    console.log('amount out: ', amount_out)\n    return Number(amount_out);\n  } catch {\n    return false;\n  }\n}\n\n// This function calls the pair contract to fetch the reserves stored in a the liquidity pool between the token of address1 and the token\n// of address2. Some extra logic was needed to make sure that the results were returned in the correct order, as\n// `pair.getReserves()` would always return the reserves in the same order regardless of which order the addresses were.\n//    `address1` - An Ethereum address of the token to trade from (either a ERC20 token or AUT)\n//    `address2` - An Ethereum address of the token to trade to (either a ERC20 token or AUT)\n//    `pair` - The pair contract for the two tokens\nexport async function fetchReserves(address1, address2, pair, signer) {\n  try {\n\n    // Get decimals for each coin\n    const coin1 = new Contract(address1, ERC20.abi, signer);\n    const coin2 = new Contract(address2, ERC20.abi, signer);\n\n    const coin1Decimals = await getDecimals(coin1);\n    const coin2Decimals = await getDecimals(coin2);\n\n    // Get reserves\n    const reservesRaw = await pair.getReserves();\n\n    // Put the results in the right order\n    const results =  [\n      (await pair.token0()) === address1 ? reservesRaw[0] : reservesRaw[1],\n      (await pair.token1()) === address2 ? reservesRaw[1] : reservesRaw[0],\n    ];\n\n    // Scale each to the right decimal place\n    return [\n      (results[0]*10**(-coin1Decimals)),\n      (results[1]*10**(-coin2Decimals))\n    ]\n  } catch (err) {\n    console.log(\"error!\");\n    console.log(err);\n    return [0, 0];\n  }\n}\n\n// This function returns the reserves stored in a the liquidity pool between the token of address1 and the token\n// of address2, as well as the liquidity tokens owned by accountAddress for that pair.\n//    `address1` - An Ethereum address of the token to trade from (either a token or AUT)\n//    `address2` - An Ethereum address of the token to trade to (either a token or AUT)\n//    `factory` - The current factory\n//    `signer` - The current signer\nexport async function getReserves(\n  address1,\n  address2,\n  factory,\n  signer,\n  accountAddress\n) {\n  try {\n    const pairAddress = await factory.getPair(address1, address2);\n    const pair = new Contract(pairAddress, PAIR.abi, signer);\n  \n    if (pairAddress !== '0x0000000000000000000000000000000000000000'){\n  \n      const reservesRaw = await fetchReserves(address1, address2, pair, signer);\n      const liquidityTokens_BN = await pair.balanceOf(accountAddress);\n      const liquidityTokens = Number(\n        ethers.utils.formatEther(liquidityTokens_BN)\n      );\n    \n      return [\n        reservesRaw[0].toPrecision(6),\n        reservesRaw[1].toPrecision(6),\n        liquidityTokens,\n      ];\n    } else {\n      console.log(\"no reserves yet\");\n      return [0,0,0];\n    }\n  }catch (err) {\n    console.log(\"error!\");\n    console.log(err);\n    return [0, 0, 0];\n  }\n}\n","import { useEffect, useState, useRef } from \"react\";\nimport { Contract, ethers } from \"ethers\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { SnackbarProvider } from \"notistack\";\nimport ConnectWalletPage from \"./Components/connectWalletPage\";\nimport {\n  getAccount,\n  getFactory,\n  getRouter,\n  getNetwork,\n  getWeth,\n} from \"./ethereumFunctions\";\nimport COINS from \"./constants/coins\";\nimport * as chains from \"./constants/chains\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ff0000\",\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      main: \"#9e9e9e\",\n      contrastText: \"#ffffff\",\n    },\n  },\n});\n\nconst autoReconnectDelay = 5000;\n\nconst Web3Provider = (props) => {\n  const [isConnected, setConnected] = useState(true);\n  let network = Object.create( {} )\n  network.provider = useRef(null);\n  network.signer = useRef(null);\n  network.account = useRef(null);\n  network.coins = [];\n  network.chainID = useRef(null);\n  network.router = useRef(null);\n  network.factory = useRef(null);\n  network.weth = useRef(null);\n  const backgroundListener = useRef(null);\n  async function setupConnection() {\n    try {\n      console.log('lets go!');\n      network.provider = new ethers.providers.Web3Provider(window.ethereum);\n      network.signer = await network.provider.getSigner();\n      await getAccount().then(async (result) => {\n        network.account = result;\n      });\n\n      await getNetwork(network.provider).then(async (chainId) => {\n        // Set chainID\n        network.chainID = chainId;\n        if (chains.networks.includes(chainId)) {\n          // Get the router using the chainID\n          console.log(\"Yes we had that chain iD\")\n          network.router = await getRouter(\n            chains.routerAddress.get(chainId),\n            network.signer\n          );\n          // Get default coins for network\n          network.coins = COINS.get(chainId);\n          console.log(\"Coins:  \",network.coins);\n          // Get Weth address from router\n          await network.router.WETH().then((wethAddress) => {\n            network.weth = getWeth(wethAddress, network.signer);\n            // Set the value of the weth address in the default coins array\n            network.coins[0].address = wethAddress;\n          });\n          // Get the factory address from the router\n          await network.router.factory().then((factory_address) => {\n            network.factory = getFactory(\n              factory_address,\n              network.signer\n            );\n          });\n          setConnected(true);\n        } else {\n          console.log(\"Wrong network mate.\");\n          setConnected(false);\n        }\n      });\n\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async function createListener() {\n    return setInterval(async () => {\n      // console.log(\"Heartbeat\");\n      try {\n        // Check the account has not changed\n        const account = await getAccount();\n        if (account != network.account) {\n          await setupConnection();\n        }\n        // const chainID = await getNetwork(network.provider);\n        // if (chainID !== network.chainID){\n        //   setConnected(false);\n        //   await setupConnection();\n        // }\n      } catch (e) {\n        setConnected(false);\n        await setupConnection();\n      }\n    }, 1000);\n  }\n\n  useEffect(async () => {\n    // Initial setup\n    console.log(\"Initial hook\");\n    await setupConnection();\n    console.log(\"network: \", network);\n\n    // Start background listener\n    if (backgroundListener.current != null) {\n      clearInterval(backgroundListener.current);\n    }\n    const listener = createListener();\n    backgroundListener.current = listener;\n    return () => clearInterval(backgroundListener.current);\n  }, []);\n\n  const renderNotConnected = () => {\n    console.log(\"Rendering\");\n    return (\n      <div className=\"App\">\n        <div>\n          <ConnectWalletPage />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {!isConnected && renderNotConnected()}\n      {isConnected && <div> {props.render(network)}</div>}\n    </>\n  );\n};\n\nexport default Web3Provider;\n","export const MenuItems = [\n  {\n    title: \"Swap\",\n    url: \"/Alternative-Uniswap-Interface/\",\n    cName: \"nav-links\",\n  },\n  {\n    title: \"Liquidity\",\n    url: \"/Alternative-Uniswap-Interface/liquidity\",\n    cName: \"nav-links\",\n  },\n];\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MenuItems } from \"./MenuItems\";\nimport \"./NavBar.css\";\n\nclass NavBar extends Component {\n  state = { clicked: false };\n\n  render() {\n    return (\n      <nav>\n        <div className=\"Title\">\n          <h1 className=\"navbar-logo\">\n            Alternative Uniswap Interface\n          </h1>\n        </div>\n\n        <div className=\"NavbarItems\">\n          <ul className={`nav-menu`}>\n            {MenuItems.map((item, index) => {\n              return (\n                <li key={index}>\n                  <Link className={\"nav-links\"} to={item.url}>\n                    {item.title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport {Button, AppBar, Toolbar, Container, Box } from \"@material-ui/core\";\nimport SocialLogin from \"@biconomy/web3-auth\"\nimport { ChainId } from \"@biconomy/core-types\";\nimport { Signer, ethers } from 'ethers'\nimport { IBundler, Bundler } from '@biconomy/bundler'\nimport { BiconomySmartAccount,BiconomySmartAccountConfig, DEFAULT_ENTRYPOINT_ADDRESS } from \"@biconomy/account\";\nimport { IPaymaster, BiconomyPaymaster,} from '@biconomy/paymaster'\n\nfunction SmartAccountConnect() {\n  return (\n    <AppBar position=\"static\" style={{ background: \"linear-gradient(269.67deg, #CCE1FA -10.61%, #C6EEEA 113.26%)\" }} >\n\n    </AppBar>\n  );\n}\n\nexport default SmartAccountConnect;\n","import React from \"react\";\nimport { Fab, Grid, InputBase, makeStyles } from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PropTypes from \"prop-types\";\nimport * as COLORS from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(1),\n    minHeight: \"80px\",\n    backgroundColor: COLORS.grey[50],\n    borderRadius: theme.spacing(2),\n    borderColor: COLORS.grey[300],\n    borderWidth: \"1px\",\n    borderStyle: \"solid\",\n  },\n  container_input: {\n    padding: theme.spacing(1),\n    minHeight: \"68px\",\n    backgroundColor: COLORS.grey[50],\n    borderRadius: theme.spacing(2),\n    borderColor: COLORS.grey[300],\n    borderWidth: \"1px\",\n    borderStyle: \"solid\",\n    marginLeft: \"50%\",\n    textAlign: \"right\",\n  },\n  container_blank: {\n    padding: theme.spacing(1),\n    minHeight: \"80px\",\n    borderRadius: theme.spacing(2),\n  },\n  grid: {\n    height: \"60px\",\n  },\n  fab: {\n    zIndex: \"0\",\n  },\n  input: {\n    ...theme.typography.h5,\n    width: \"100%\",\n  },\n  inputBase: {\n    textAlign: \"right\",\n  },\n}));\n\nCoinField.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  symbol: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  activeField: PropTypes.bool.isRequired,\n};\n\nexport function RemoveLiquidityField1(props) {\n  // This component is used to selecting a coin and entering a value, the props are explained below:\n  //      onClick - (string) => void - Called when the button is clicked\n  //      symbol - string - The text displayed on the button\n  //      value - string - The value of the text field\n  //      onChange - (e) => void - Called when the text field changes\n  //      activeField - boolean - Whether text can be entered into this field or not\n\n  const classes = useStyles();\n  const { onClick, symbol, value, onChange, activeField } = props;\n  return (\n    <div className={classes.container_blank}>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        className={classes.grid}\n      >\n        {/* Button */}\n        <Grid item xs={3}>\n          <Fab\n            size=\"small\"\n            variant=\"extended\"\n            onClick={onClick}\n            className={classes.fab}\n          >\n            {symbol}\n            <ExpandMoreIcon />\n          </Fab>\n        </Grid>\n        {/* Text Field */}\n        <Grid item xs={9}>\n          <InputBase\n            value={value}\n            onChange={onChange}\n            placeholder=\"0.0\"\n            disabled={!activeField}\n            classes={{\n              root: classes.container_input,\n              input: classes.inputBase,\n            }}\n          />\n        </Grid>\n        {/* </div> */}\n      </Grid>\n    </div>\n  );\n}\n\nexport function RemoveLiquidityField2(props) {\n  // This component is used to selecting a coin and entering a value, the props are explained below:\n  //      onClick - (string) => void - Called when the button is clicked\n  //      symbol - string - The text displayed on the button\n  //      value - string - The value of the text field\n  //      onChange - (e) => void - Called when the text field changes\n  //      activeField - boolean - Whether text can be entered into this field or not\n\n  const classes = useStyles();\n  const { onClick, symbol } = props;\n\n  return (\n    <div className={classes.container_blank}>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        className={classes.grid}\n      >\n        {/* Button */}\n        <Grid item xs={3}>\n          <Fab\n            size=\"small\"\n            variant=\"extended\"\n            onClick={onClick}\n            className={classes.fab}\n          >\n            {symbol}\n            <ExpandMoreIcon />\n          </Fab>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default function CoinField(props) {\n  // This component is used to selecting a token and entering a value, the props are explained below:\n  //      onClick - (string) => void - Called when the button is clicked\n  //      symbol - string - The text displayed on the button\n  //      value - string - The value of the text field\n  //      onChange - (e) => void - Called when the text field changes\n  //      activeField - boolean - Whether text can be entered into this field or not\n\n  const classes = useStyles();\n  const { onClick, symbol, value, onChange, activeField } = props;\n\n  return (\n    <div className={classes.container}>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        className={classes.grid}\n      >\n        {/* Button */}\n        <Grid item xs={3}>\n          <Fab\n            size=\"small\"\n            variant=\"extended\"\n            onClick={onClick}\n            className={classes.fab}\n          >\n            {symbol}\n            <ExpandMoreIcon />\n          </Fab>\n        </Grid>\n\n        {/* Text Field */}\n        <Grid item xs={9}>\n          <InputBase\n            value={value}\n            onChange={onChange}\n            placeholder=\"0.0\"\n            disabled={!activeField}\n            classes={{ root: classes.input, input: classes.inputBase }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ButtonBase, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport * as COLORS from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: \"100%\",\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    \"&:hover, &$focusVisible\": {\n      backgroundColor: COLORS.grey[200],\n    },\n  },\n  coinName: {\n    opacity: 0.6,\n  },\n}));\n\nCoinButton.propTypes = {\n  coinName: PropTypes.string.isRequired,\n  coinAbbr: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default function CoinButton(props) {\n  const { coinName, coinAbbr, onClick, ...other } = props;\n  const classes = useStyles();\n\n  return (\n    <ButtonBase focusRipple className={classes.button} onClick={onClick}>\n      <Grid container direction=\"column\">\n        <Typography variant=\"h6\">{coinAbbr}</Typography>\n        <Typography variant=\"body2\" className={classes.coinName}>\n          {coinName}\n        </Typography>\n      </Grid>\n    </ButtonBase>\n  );\n}\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  Grid,\n  IconButton,\n  makeStyles,\n  TextField,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CoinButton from \"./CoinButton\";\nimport { doesTokenExist } from \"../ethereumFunctions\";\nimport PropTypes from \"prop-types\";\nimport * as COLORS from \"@material-ui/core/colors\";\n\nconst styles = (theme) => ({\n  dialogContainer: {\n    borderRadius: theme.spacing(2),\n  },\n  titleSection: {\n    padding: theme.spacing(2),\n  },\n  titleText: {\n    alignSelf: \"center\",\n  },\n  hr: {\n    margin: 0,\n  },\n  address: {\n    paddingLeft: theme.spacing(2.5),\n    paddingRight: theme.spacing(2.5),\n    paddingBottom: theme.spacing(2),\n  },\n  coinList: {\n    height: \"300px\",\n    overflowY: \"scroll\",\n  },\n  coinContainer: {\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n    paddingTop: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    overflow: \"hidden\",\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\n// This is a modified version of MaterialUI's DialogTitle component, I've added a close button in the top right corner\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle\n      disableTypography\n      className={classes.titleSection}\n      {...other}\n    >\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignContent=\"center\"\n      >\n        <Typography variant=\"h6\" className={classes.titleText}>\n          {children}\n        </Typography>\n        {onClose ? (\n          <IconButton aria-label=\"close\" onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </Grid>\n    </MuiDialogTitle>\n  );\n});\n\n// This is a modified version of MaterialUI's DialogActions component, the color has been changed by modifying the CSS\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n    backgroundColor: COLORS.grey[100],\n  },\n}))(MuiDialogActions);\n\nCoinDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  coins: PropTypes.array.isRequired,\n};\n\nexport default function CoinDialog(props) {\n  // The CoinDialog component will display a dialog window on top of the page, allowing a user to select a coin\n  // from a list (list can be found in 'src/constants/coins.js') or enter an address into a search field. Any entered\n  // addresses will first be validated to make sure they exist.\n  // When the dialog closes, it will call the `onClose` prop with 1 argument which will either be undefined (if the\n  // user closes the dialog without selecting anything), or will be a string containing the address of a coin.\n\n  const classes = useStyles();\n  const { onClose, open, coins, signer, ...others } = props;\n\n  const [address, setAddress] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n\n  // Called when the user tries to input a custom address, this function will validate the address and will either\n  // then close the dialog and return the validated address, or will display an error.\n  const submit = () => {\n    if (doesTokenExist(address, signer)) {\n      exit(address);\n    } else {\n      setError(\"This address is not valid\");\n    }\n  };\n\n  // Resets any fields in the dialog (in case it's opened in the future) and calls the `onClose` prop\n  const exit = (value) => {\n    setError(\"\");\n    setAddress(\"\");\n    onClose(value);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => exit(undefined)}\n      fullWidth\n      maxWidth=\"sm\"\n      classes={{ paper: classes.dialogContainer }}\n    >\n      <DialogTitle onClose={() => exit(undefined)}>Select Coin</DialogTitle>\n\n      <hr className={classes.hr} />\n\n      <div className={classes.coinContainer}>\n        <Grid container direction=\"column\" spacing={1} alignContent=\"center\">\n          <TextField\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            variant=\"outlined\"\n            placeholder=\"Paste Address\"\n            error={error !== \"\"}\n            helperText={error}\n            fullWidth\n            className={classes.address}\n          />\n\n          <hr className={classes.hr} />\n\n          <Grid item className={classes.coinList}>\n            <Grid container direction=\"column\">\n              {/* Maps all of the tokens in the constants file to buttons */}\n              {coins.map((coin, index) => (\n                <Grid item key={index} xs={12}>\n                  <CoinButton\n                    coinName={coin.name}\n                    coinAbbr={coin.abbr}\n                    onClick={() => exit(coin.address)}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n\n      <hr className={classes.hr} />\n\n      <DialogActions>\n        <Button autoFocus onClick={submit} color=\"primary\">\n          Enter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport { Button, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    margin: 0,\n    position: \"relative\",\n  },\n  progress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nexport default function LoadingButton(props) {\n  const classes = useStyles();\n  const { children, loading, valid, success, fail, onClick, ...other } = props;\n  return (\n    <div className={classes.wrapper}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        disabled={loading || !valid}\n        type=\"submit\"\n        onClick={onClick}\n        {...other}\n      >\n        {children}\n      </Button>\n      {loading && <CircularProgress size={24} className={classes.progress} />}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Dialog,\n  Grid,\n  IconButton,\n  makeStyles,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = (theme) => ({\n  dialogContainer: {\n    borderRadius: theme.spacing(2),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport default function WrongNetwork(props) {\n\n  const classes = useStyles();\n  const {open} = props;\n  return (\n    <Dialog\n      open={open}\n      fullWidth\n      maxWidth=\"sm\"\n      classes={{ paper: classes.dialogContainer }}\n    >\n      <MuiDialogTitle>Unsupported Network</MuiDialogTitle>\n    </Dialog>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport {\n  Container,\n  Grid,\n  IconButton,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport SwapVerticalCircleIcon from \"@material-ui/icons/SwapVerticalCircle\";\nimport { useSnackbar } from \"notistack\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport {\n  getAccount,\n  getFactory,\n  getProvider,\n  getRouter,\n  getSigner,\n  getNetwork,\n  getAmountOut,\n  getBalanceAndSymbol,\n  getWeth,\n  swapTokens,\n  getReserves,\n} from \"../ethereumFunctions\";\nimport CoinField from \"./CoinField\";\nimport CoinDialog from \"./CoinDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\nimport COINS from \"../constants/coins\";\nimport * as chains from \"../constants/chains\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(1),\n    paddingBottom: theme.spacing(3),\n  },\n  switchButton: {\n    zIndex: 1,\n    margin: \"-16px\",\n    padding: theme.spacing(0.5),\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  hr: {\n    width: \"100%\",\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\",\n  },\n  footer: {\n    marginTop: \"285px\",\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction CoinSwapper(props) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Stores a record of whether their respective dialog window is open\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\n\n  // Stores data about their respective coin\n  const [coin1, setCoin1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n  const [coin2, setCoin2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\n\n  // Stores the current value of their respective text box\n  const [field1Value, setField1Value] = React.useState(\"\");\n  const [field2Value, setField2Value] = React.useState(\"\");\n\n  // Controls the loading button\n  const [loading, setLoading] = React.useState(false);\n\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n  const switchFields = () => {\n    setCoin1(coin2);\n    setCoin2(coin1);\n    setField1Value(field2Value);\n    setReserves(reserves.reverse());\n  };\n\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\n  const handleChange = {\n    field1: (e) => {\n      setField1Value(e.target.value);\n    },\n  };\n\n  // Turns the account's balance into something nice and readable\n  const formatBalance = (balance, symbol) => {\n    if (balance && symbol)\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Turns the coin's reserves into something nice and readable\n  const formatReserve = (reserve, symbol) => {\n    if (reserve && symbol) return reserve + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Determines whether the button should be enabled or not\n  const isButtonEnabled = () => {\n\n    // If both coins have been selected, and a valid float has been entered which is less than the user's balance, then return true\n    const parsedInput1 = parseFloat(field1Value);\n    const parsedInput2 = parseFloat(field2Value);\n    return (\n      coin1.address &&\n      coin2.address &&\n      !isNaN(parsedInput1) &&\n      !isNaN(parsedInput2) &&\n      0 < parsedInput1 &&\n      parsedInput1 <= coin1.balance\n    );\n  };\n\n  // Called when the dialog window for coin1 exits\n  const onToken1Selected = (address) => {\n    // Close the dialog window\n    setDialog1Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin2.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then((data) => {\n        setCoin1({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // Called when the dialog window for coin2 exits\n  const onToken2Selected = (address) => {\n    // Close the dialog window\n    setDialog2Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin1.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then((data) => {\n        setCoin2({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // Calls the swapTokens Ethereum function to make the swap, then resets nessicary state variables\n  const swap = () => {\n    console.log(\"Attempting to swap tokens...\");\n    setLoading(true);\n\n    swapTokens(\n      coin1.address,\n      coin2.address,\n      field1Value,\n      props.network.router,\n      props.network.account,\n      props.network.signer\n    )\n      .then(() => {\n        setLoading(false);\n\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n        setField1Value(\"\");\n        enqueueSnackbar(\"Transaction Successful\", { variant: \"success\" });\n      })\n      .catch((e) => {\n        setLoading(false);\n        enqueueSnackbar(\"Transaction Failed (\" + e.message + \")\", {\n          variant: \"error\",\n          autoHideDuration: 10000,\n        });\n      });\n  };\n\n  // The lambdas within these useEffects will be called when a particular dependency is updated. These dependencies\n  // are defined in the array of variables passed to the function after the lambda expression. If there are no dependencies\n  // the lambda will only ever be called when the component mounts. These are very useful for calculating new values\n  // after a particular state change, for example, calculating the new exchange rate whenever the addresses\n  // of the two coins change.\n\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n  useEffect(() => {\n    console.log(\n      \"Trying to get Reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\n    );\n\n    if (coin1.address && coin2.address) {\n      getReserves(coin1.address, coin2.address, props.network.factory, props.network.signer, props.network.account).then(\n        (data) => setReserves(data)\n      );\n    }\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.router, props.network.signer]);\n\n  // This hook is called when either of the state variables `field1Value` `coin1.address` or `coin2.address` change.\n  // It attempts to calculate and set the state variable `field2Value`\n  // This means that if the user types a new value into the conversion box or the conversion rate changes,\n  // the value in the output box will change.\n  useEffect(() => {\n    if (isNaN(parseFloat(field1Value))) {\n      setField2Value(\"\");\n    } else if (parseFloat(field1Value) && coin1.address && coin2.address) {\n      getAmountOut(coin1.address, coin2.address, field1Value, props.network.router, props.network.signer).then(\n        (amount) => setField2Value(amount.toFixed(7))\n      ).catch(e => {\n        console.log(e);\n        setField2Value(\"NA\");\n      })\n    } else {\n      setField2Value(\"\");\n    }\n  }, [field1Value, coin1.address, coin2.address]);\n\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n  useEffect(() => {\n    const coinTimeout = setTimeout(() => {\n      console.log('props: ', props);\n      console.log(\"Checking balances...\");\n\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(\n          coin1.address,\n          coin2.address,\n          props.network.factory,\n          props.network.signer,\n          props.network.account\n        ).then((data) => setReserves(data));\n      }\n\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin1.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin1({\n              ...coin1,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin2.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin2({\n              ...coin2,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n    }, 10000);\n\n    return () => clearTimeout(coinTimeout);\n  });\n\n  return (\n    <div>\n      {/* Dialog Windows */}\n      <CoinDialog\n        open={dialog1Open}\n        onClose={onToken1Selected}\n        coins={props.network.coins}\n        props={props.network.signer}\n      />\n      <CoinDialog\n        open={dialog2Open}\n        onClose={onToken2Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <WrongNetwork\n        open={wrongNetworkOpen}\n        />\n\n      {/* Coin Swapper */}\n      <Container maxWidth=\"xs\">\n        <Paper className={classes.paperContainer}>\n          <Typography variant=\"h5\" className={classes.title}>\n            Swap Coins\n          </Typography>\n\n          <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n            <Grid item xs={12} className={classes.fullWidth}>\n              <CoinField\n                activeField={true}\n                value={field1Value}\n                onClick={() => setDialog1Open(true)}\n                onChange={handleChange.field1}\n                symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\n              />\n            </Grid>\n\n            <IconButton onClick={switchFields} className={classes.switchButton}>\n              <SwapVerticalCircleIcon fontSize=\"medium\" />\n            </IconButton>\n\n            <Grid item xs={12} className={classes.fullWidth}>\n              <CoinField\n                activeField={false}\n                value={field2Value}\n                onClick={() => setDialog2Open(true)}\n                symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\n              />\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            {/* Balance Display */}\n            <Typography variant=\"h6\">Your Balances</Typography>\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(coin1.balance, coin1.symbol)}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(coin2.balance, coin2.symbol)}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            {/* Reserves Display */}\n            <Typography variant=\"h6\">Reserves</Typography>\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatReserve(reserves[0], coin1.symbol)}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatReserve(reserves[1], coin2.symbol)}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            <LoadingButton\n              loading={loading}\n              valid={isButtonEnabled()}\n              success={false}\n              fail={false}\n              onClick={swap}\n            >\n              <LoopIcon />\n              Swap\n            </LoadingButton>\n          </Grid>\n        </Paper>\n      </Container>\n\n      <Grid\n        container\n        className={classes.footer}\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"flex-end\"\n      >\n        <p>\n        Alternative Uniswap Interface | Get AUT for use in the bakerloo testnet{\" \"}\n          <a href=\"https://faucet.bakerloo.autonity.network/\">here</a>\n        </p>\n      </Grid>\n    </div>\n  );\n}\n\nexport default CoinSwapper;","import React from \"react\";\nimport { ButtonGroup, Button } from \"@material-ui/core\";\n\nexport default function SwitchButton(props) {\n  const { setDeploy } = props;\n\n  const changeStyles = (K) => {\n    if (K === true) {\n      let add_button = document.getElementById(\"add-button\");\n      add_button.style.backgroundColor = \"#ff0000\";\n\n      let remove_button = document.getElementById(\"remove-button\");\n      remove_button.style.backgroundColor = \"#9e9e9e\";\n    } else {\n      let remove_button = document.getElementById(\"remove-button\");\n      remove_button.style.backgroundColor = \"#ff0000\";\n\n      let add_button = document.getElementById(\"add-button\");\n      add_button.style.backgroundColor = \"#9e9e9e\";\n    }\n  };\n\n  return (\n    <div>\n      <ButtonGroup size=\"large\" variant=\"contained\">\n        <Button\n          id=\"add-button\"\n          color=\"primary\"\n          text=\"white\"\n          onClick={() => {\n            setDeploy(true);\n            changeStyles(true);\n          }}\n        >\n          Deploy Liquidity\n        </Button>\n\n        <Button\n          id=\"remove-button\"\n          color=\"secondary\"\n          text=\"white\"\n          onClick={() => {\n            setDeploy(false);\n            changeStyles(false);\n          }}\n        >\n          Remove Liquidity\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n","import { Contract, ethers } from \"ethers\";\nimport { fetchReserves, getDecimals } from \"../ethereumFunctions\";\n\nconst ERC20 = require(\"../build/ERC20.json\");\nconst PAIR = require(\"../build/IUniswapV2Pair.json\");\n\n// Function used to add Liquidity to any pair of tokens or token-AUT\n// To work correctly, there needs to be 9 arguments:\n//    `address1` - An Ethereum address of the coin to add from (either a token or AUT)\n//    `address2` - An Ethereum address of the coin to add to (either a token or AUT)\n//    `amount1` - A float or similar number representing the value of address1's coin to add\n//    `amount2` - A float or similar number representing the value of address2's coin to add\n//    `amount1Min` - A float or similar number representing the minimum of address1's coin to add\n//    `amount2Min` - A float or similar number representing the minimum of address2's coin to add\n//    `routerContract` - The router contract to carry out this trade\n//    `accountAddress` - An Ethereum address of the current user's account\n//    `provider` - The current provider\n//    `signer` - The current signer\nexport async function addLiquidity(\n  address1,\n  address2,\n  amount1,\n  amount2,\n  amount1min,\n  amount2min,\n  routerContract,\n  account,\n  signer\n) {\n  const token1 = new Contract(address1, ERC20.abi, signer);\n  const token2 = new Contract(address2, ERC20.abi, signer);\n\n  const token1Decimals = await getDecimals(token1);\n  const token2Decimals = await getDecimals(token2);\n\n  const amountIn1 = ethers.utils.parseUnits(amount1, token1Decimals);\n  const amountIn2 = ethers.utils.parseUnits(amount2, token2Decimals);\n\n  const amount1Min = ethers.utils.parseUnits(amount1min, token1Decimals);\n  const amount2Min = ethers.utils.parseUnits(amount2min, token2Decimals);\n\n  const time = Math.floor(Date.now() / 1000) + 200000;\n  const deadline = ethers.BigNumber.from(time);\n\n  await token1.approve(routerContract.address, amountIn1);\n  await token2.approve(routerContract.address, amountIn2);\n\n  const wethAddress = await routerContract.WETH();\n\n  console.log([\n    address1,\n    address2,\n    amountIn1,\n    amountIn2,\n    amount1Min,\n    amount2Min,\n    account,\n    deadline,\n  ]);\n\n  if (address1 === wethAddress) {\n    // Eth + Token\n    await routerContract.addLiquidityETH(\n      address2,\n      amountIn2,\n      amount2Min,\n      amount1Min,\n      account,\n      deadline,\n      { value: amountIn1 }\n    );\n  } else if (address2 === wethAddress) {\n    // Token + Eth\n    await routerContract.addLiquidityETH(\n      address1,\n      amountIn1,\n      amount1Min,\n      amount2Min,\n      account,\n      deadline,\n      { value: amountIn2 }\n    );\n  } else {\n    // Token + Token\n    await routerContract.addLiquidity(\n      address1,\n      address2,\n      amountIn1,\n      amountIn2,\n      amount1Min,\n      amount2Min,\n      account,\n      deadline\n    );\n  }\n}\n\n// Function used to remove Liquidity from any pair of tokens or token-AUT\n// To work correctly, there needs to be 9 arguments:\n//    `address1` - An Ethereum address of the coin to recieve (either a token or AUT)\n//    `address2` - An Ethereum address of the coin to recieve (either a token or AUT)\n//    `liquidity_tokens` - A float or similar number representing the value of liquidity tokens you will burn to get tokens back\n//    `amount1Min` - A float or similar number representing the minimum of address1's coin to recieve\n//    `amount2Min` - A float or similar number representing the minimum of address2's coin to recieve\n//    `routerContract` - The router contract to carry out this trade\n//    `accountAddress` - An Ethereum address of the current user's account\n//    `provider` - The current provider\n//    `signer` - The current signer\nexport async function removeLiquidity(\n  address1,\n  address2,\n  liquidity_tokens,\n  amount1min,\n  amount2min,\n  routerContract,\n  account,\n  signer,\n  factory\n) {\n  const token1 = new Contract(address1, ERC20.abi, signer);\n  const token2 = new Contract(address2, ERC20.abi, signer);\n\n  const token1Decimals = await getDecimals(token1);\n  const token2Decimals = await getDecimals(token2);\n\n  const Getliquidity = (liquidity_tokens)=>{\n    if (liquidity_tokens < 0.001){\n      return ethers.BigNumber.from(liquidity_tokens*10**18);\n    }\n    return ethers.utils.parseUnits(String(liquidity_tokens), 18);\n  }\n\n  const liquidity = Getliquidity(liquidity_tokens);\n  console.log('liquidity: ', liquidity);\n\n  const amount1Min = ethers.utils.parseUnits(String(amount1min), token1Decimals);\n  const amount2Min = ethers.utils.parseUnits(String(amount2min), token2Decimals);\n\n  const time = Math.floor(Date.now() / 1000) + 200000;\n  const deadline = ethers.BigNumber.from(time);\n\n  const wethAddress = await routerContract.WETH();\n  const pairAddress = await factory.getPair(address1, address2);\n  const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n  await pair.approve(routerContract.address, liquidity);\n\n  console.log([\n    address1,\n    address2,\n    Number(liquidity),\n    Number(amount1Min),\n    Number(amount2Min),\n    account,\n    deadline,\n  ]);\n\n  if (address1 === wethAddress) {\n    // Eth + Token\n    await routerContract.removeLiquidityETH(\n      address2,\n      liquidity,\n      amount2Min,\n      amount1Min,\n      account,\n      deadline\n    );\n  } else if (address2 === wethAddress) {\n    // Token + Eth\n    await routerContract.removeLiquidityETH(\n      address1,\n      liquidity,\n      amount1Min,\n      amount2Min,\n      account,\n      deadline\n    );\n  } else {\n    // Token + Token\n    await routerContract.removeLiquidity(\n      address1,\n      address2,\n      liquidity,\n      amount1Min,\n      amount2Min,\n      account,\n      deadline\n    );\n  }\n}\n\nconst quote = (amount1, reserve1, reserve2) => {\n  const amount2 = amount1 * (reserve2 / reserve1);\n  return [amount2];\n};\n\n// Function used to get a quote of the liquidity addition\n//    `address1` - An Ethereum address of the coin to recieve (either a token or AUT)\n//    `address2` - An Ethereum address of the coin to recieve (either a token or AUT)\n//    `amountA_desired` - The prefered value of the first token that the user would like to deploy as liquidity\n//    `amountB_desired` - The prefered value of the second token that the user would like to deploy as liquidity\n//    `factory` - The current factory\n//    `signer` - The current signer\n\nasync function quoteMintLiquidity(\n  address1,\n  address2,\n  amountA,\n  amountB,\n  factory,\n  signer\n){\n  const MINIMUM_LIQUIDITY = 1000;\n  let _reserveA = 0;\n  let _reserveB = 0;\n  let totalSupply = 0;\n  [_reserveA, _reserveB, totalSupply] = await factory.getPair(address1, address2).then(async (pairAddress) => {\n    if (pairAddress !== '0x0000000000000000000000000000000000000000'){\n      const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n      const reservesRaw = await fetchReserves(address1, address2, pair, signer); // Returns the reserves already formated as ethers\n      const reserveA = reservesRaw[0];\n      const reserveB = reservesRaw[1];\n    \n      const _totalSupply = await pair.totalSupply();\n      const totalSupply = Number(ethers.utils.formatEther(_totalSupply));\n      return [reserveA, reserveB, totalSupply]\n    } else {\n      return [0,0,0]\n    }\n  });\n\n  const token1 = new Contract(address1, ERC20.abi, signer);\n  const token2 = new Contract(address2, ERC20.abi, signer);\n\n  // Need to do all this decimals work to account for 0 decimal numbers\n\n  const token1Decimals = await getDecimals(token1);\n  const token2Decimals = await getDecimals(token2);\n\n  const valueA = amountA*(10**token1Decimals);\n  const valueB = amountB*(10**token2Decimals);\n\n  const reserveA = _reserveA*(10**token1Decimals);\n  const reserveB = _reserveB*(10**token2Decimals);\n\n  if (totalSupply == 0){\n    return Math.sqrt(((valueA * valueB)-MINIMUM_LIQUIDITY))*10**(-18);\n  };\n  \n  return (\n    Math.min(valueA*totalSupply/reserveA, valueB*totalSupply/reserveB)\n  );\n};\n\nexport async function quoteAddLiquidity(\n  address1,\n  address2,\n  amountADesired,\n  amountBDesired,\n  factory,\n  signer\n) {\n\n  const pairAddress = await factory.getPair(address1, address2);\n  const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n  const reservesRaw = await fetchReserves(address1, address2, pair, signer); // Returns the reserves already formated as ethers\n  const reserveA = reservesRaw[0];\n  const reserveB = reservesRaw[1];\n\n  if (reserveA === 0 && reserveB === 0) {\n    const amountOut = await quoteMintLiquidity(\n      address1,\n      address2,\n      amountADesired,\n      amountBDesired,\n      factory,\n      signer);\n    return [\n      amountADesired,\n      amountBDesired,\n      amountOut.toPrecision(8),\n    ];\n  } else {\n    const amountBOptimal = quote(amountADesired, reserveA, reserveB);\n    if (amountBOptimal <= amountBDesired) {\n      const amountOut = await quoteMintLiquidity(\n        address1,\n        address2,\n        amountADesired,\n        amountBOptimal,\n        factory,\n        signer);\n      return [\n        amountADesired,\n        amountBOptimal,\n        amountOut.toPrecision(8),\n      ];\n    } else {\n      const amountAOptimal = quote(\n        amountBDesired,\n        reserveB,\n        reserveA\n      );\n      const amountOut = await quoteMintLiquidity(\n        address1,\n        address2,\n        amountAOptimal,\n        amountBDesired,\n        factory,\n        signer);\n      return [\n        amountAOptimal,\n        amountBDesired,\n        amountOut.toPrecision(8),\n      ];\n    }\n  }\n}\n\n// Function used to get a quote of the liquidity removal\n//    `address1` - An Ethereum address of the coin to recieve (either a token or AUT)\n//    `address2` - An Ethereum address of the coin to recieve (either a token or AUT)\n//    `liquidity` - The amount of liquidity tokens the user will burn to get their tokens back\n//    `factory` - The current factory\n//    `signer` - The current signer\n\nexport async function quoteRemoveLiquidity(\n  address1,\n  address2,\n  liquidity,\n  factory,\n  signer\n) {\n  const pairAddress = await factory.getPair(address1, address2);\n  console.log(\"pair address\", pairAddress);\n  const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n  const reservesRaw = await fetchReserves(address1, address2, pair, signer); // Returns the reserves already formated as ethers\n  const reserveA = reservesRaw[0];\n  const reserveB = reservesRaw[1];\n\n  const feeOn =\n    (await factory.feeTo()) !== 0x0000000000000000000000000000000000000000;\n\n  const _kLast = await pair.kLast();\n  const kLast = Number(ethers.utils.formatEther(_kLast));\n\n  const _totalSupply = await pair.totalSupply();\n  let totalSupply = Number(ethers.utils.formatEther(_totalSupply));\n\n  if (feeOn && kLast > 0) {\n    const feeLiquidity =\n      (totalSupply * (Math.sqrt(reserveA * reserveB) - Math.sqrt(kLast))) /\n      (5 * Math.sqrt(reserveA * reserveB) + Math.sqrt(kLast));\n    totalSupply = totalSupply + feeLiquidity;\n  }\n\n  const Aout = (reserveA * liquidity) / totalSupply;\n  const Bout = (reserveB * liquidity) / totalSupply;\n\n  return [liquidity, Aout, Bout];\n}\n","import React, { useEffect } from \"react\";\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  getBalanceAndSymbol,\n  getReserves,\n} from \"../ethereumFunctions\";\n\nimport { addLiquidity, quoteAddLiquidity } from \"./LiquidityFunctions\";\n\nimport CoinField from \"../CoinSwapper/CoinField\";\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n    width: \"40%\",\n    overflow: \"wrap\",\n    background: \"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",\n    color: \"white\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  values: {\n    width: \"50%\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  hr: {\n    width: \"100%\",\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\",\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.4),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction LiquidityDeployer(props) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Stores a record of whether their respective dialog window is open\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\n\n  // Stores data about their respective coin\n  const [coin1, setCoin1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n  const [coin2, setCoin2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\n\n  // Stores the current value of their respective text box\n  const [field1Value, setField1Value] = React.useState(\"\");\n  const [field2Value, setField2Value] = React.useState(\"\");\n\n  // Controls the loading button\n  const [loading, setLoading] = React.useState(false);\n\n  // Stores the user's balance of liquidity tokens for the current pair\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\n\n  // Used when getting a quote of liquidity\n  const [liquidityOut, setLiquidityOut] = React.useState([0, 0, 0]);\n\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n  const switchFields = () => {\n    let oldField1Value = field1Value;\n    let oldField2Value = field2Value;\n\n    setCoin1(coin2);\n    setCoin2(coin1);\n    setField1Value(oldField2Value);\n    setField2Value(oldField1Value);\n    setReserves(reserves.reverse());\n  };\n\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\n  const handleChange = {\n    field1: (e) => {\n      setField1Value(e.target.value);\n    },\n    field2: (e) => {\n      setField2Value(e.target.value);\n    },\n  };\n\n  // Turns the account's balance into something nice and readable\n  const formatBalance = (balance, symbol) => {\n    if (balance && symbol)\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Turns the coin's reserves into something nice and readable\n  const formatReserve = (reserve, symbol) => {\n    if (reserve && symbol) return reserve + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Determines whether the button should be enabled or not\n  const isButtonEnabled = () => {\n\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\n    const parsedInput1 = parseFloat(field1Value);\n    const parsedInput2 = parseFloat(field2Value);\n    return (\n      coin1.address &&\n      coin2.address &&\n      parsedInput1 !== NaN &&\n      0 < parsedInput1 &&\n      parsedInput2 !== NaN &&\n      0 < parsedInput2 &&\n      parsedInput1 <= coin1.balance &&\n      parsedInput2 <= coin2.balance\n    );\n  };\n\n\n\n  const deploy = () => {\n    console.log(\"Attempting to deploy liquidity...\");\n    setLoading(true);\n\n    addLiquidity(\n      coin1.address,\n      coin2.address,\n      field1Value,\n      field2Value,\n      '0',\n      '0',\n      props.network.router,\n      props.network.account,\n      props.network.signer\n    )\n      .then(() => {\n        setLoading(false);\n\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n        setField1Value(\"\");\n        setField2Value(\"\");\n        enqueueSnackbar(\"Deployment Successful\", { variant: \"success\" });\n      })\n      .catch((e) => {\n        setLoading(false);\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\n          variant: \"error\",\n          autoHideDuration: 10000,\n        });\n      });\n  };\n\n  // Called when the dialog window for coin1 exits\n  const onToken1Selected = (address) => {\n    // Close the dialog window\n    setDialog1Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin2.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(\n        props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n        ).then((data) => {\n        setCoin1({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // Called when the dialog window for coin2 exits\n  const onToken2Selected = (address) => {\n    // Close the dialog window\n    setDialog2Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin1.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n        ).then((data) => {\n        setCoin2({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n  useEffect(() => {\n    console.log(\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\n    );\n\n    if (coin1.address && coin2.address && props.network.account) {\n      getReserves(\n        coin1.address,\n        coin2.address,\n        props.network.factory,\n        props.network.signer,\n        props.network.account\n        ).then(\n        (data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        }\n      );\n    }\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.signer]);\n\n  // This hook is called when either of the state variables `field1Value`, `field2Value`, `coin1.address` or `coin2.address` change.\n  // It will give a preview of the liquidity deployment.\n  useEffect(() => {\n    if (isButtonEnabled()) {\n      console.log(\"Trying to preview the liquidity deployment\");\n\n      quoteAddLiquidity(\n        coin1.address,\n        coin2.address,\n        field1Value,\n        field2Value,\n        props.network.factory,\n        props.network.signer\n      ).then((data) => {\n        // console.log(data);\n        console.log(\"TokenA in: \", data[0]);\n        console.log(\"TokenB in: \", data[1]);\n        console.log(\"Liquidity out: \", data[2]);\n        setLiquidityOut([data[0], data[1], data[2]]);\n      });\n    }\n  }, [coin1.address, coin2.address, field1Value, field2Value, props.network.factory, props.network.signer]);\n\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n  useEffect(() => {\n    const coinTimeout = setTimeout(() => {\n      console.log(\"Checking balances & Getting reserves...\");\n\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(\n          coin1.address,\n          coin2.address,\n          props.network.factory,\n          props.network.signer,\n          props.network.account\n        ).then((data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        });\n      }\n\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin1.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin1({\n              ...coin1,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin2.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin2({\n              ...coin2,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n    }, 10000);\n\n    return () => clearTimeout(coinTimeout);\n  });\n\n  return (\n    <div>\n      {/* Liquidity deployer */}\n      <Typography variant=\"h5\" className={classes.title}></Typography>\n\n      {/* Dialog Windows */}\n      <CoinDialog\n        open={dialog1Open}\n        onClose={onToken1Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <CoinDialog\n        open={dialog2Open}\n        onClose={onToken2Selected}\n        coins={props.network.coins}\n        signer={props.networksigner}\n      />\n      <WrongNetwork\n        open={wrongNetworkOpen}\n      />\n\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <Grid item xs={12} className={classes.fullWidth}>\n          <CoinField\n            activeField={true}\n            value={field1Value}\n            onClick={() => setDialog1Open(true)}\n            onChange={handleChange.field1}\n            symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.fullWidth}>\n          <CoinField\n            activeField={true}\n            value={field2Value}\n            onClick={() => setDialog2Open(true)}\n            onChange={handleChange.field2}\n            symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={4}\n        className={classes.balance}\n      >\n        <hr className={classes.hr} />\n        <Grid\n          container\n          item\n          className={classes.values}\n          direction=\"column\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          {/* Balance Display */}\n          <Typography variant=\"h6\">Your Balances</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin1.balance, coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin2.balance, coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Reserves Display */}\n          <Typography variant=\"h6\">Reserves</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[0], coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[1], coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Liquidity Tokens Display */}\n          <Typography variant=\"h6\">Your Liquidity Pool Tokens</Typography>\n          <Grid container direction=\"row\" justifyContent=\"center\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(liquidityTokens, \"UNI-V2\")}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Paper className={classes.paperContainer}>\n          {/*Red  Display to show the quote */}\n          <Grid\n            container\n            item\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={2}\n            className={classes.fullWidth}\n          >\n            {/* Tokens in */}\n            <Typography variant=\"h6\">Tokens in</Typography>\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(liquidityOut[0], coin1.symbol)}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(liquidityOut[1], coin2.symbol)}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            {/* Liquidity Tokens Display */}\n            <Typography variant=\"h6\">Liquidity Pool Tokens Out</Typography>\n            <Grid container direction=\"row\" justifyContent=\"center\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatReserve(liquidityOut[2], \"UNI-V2\")}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <hr className={classes.hr} />\n      </Grid>\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <LoadingButton\n          loading={loading}\n          valid={isButtonEnabled()}\n          success={false}\n          fail={false}\n          onClick={deploy}\n        >\n          <AccountBalanceIcon className={classes.buttonIcon} />\n          Deploy\n        </LoadingButton>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LiquidityDeployer;\n","import React, { useEffect } from \"react\";\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  getBalanceAndSymbol,\n  getReserves,\n} from \"../ethereumFunctions\";\nimport { removeLiquidity, quoteRemoveLiquidity } from \"./LiquidityFunctions\";\nimport {\n  RemoveLiquidityField1,\n  RemoveLiquidityField2,\n} from \"../CoinSwapper/CoinField\";\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n    width: \"40%\",\n    overflow: \"wrap\",\n    background: \"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",\n    color: \"white\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  values: {\n    width: \"50%\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  hr: {\n    width: \"100%\",\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\",\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.4),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction LiquidityRemover(props) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Stores a record of whether their respective dialog window is open\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\n\n\n  // Stores data about their respective coin\n  const [coin1, setCoin1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n  const [coin2, setCoin2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\n\n  // Stores the current value of their respective text box\n  const [field1Value, setField1Value] = React.useState(\"\");\n\n  // Controls the loading button\n  const [loading, setLoading] = React.useState(false);\n\n  // Stores the liquidity tokens balance of the user\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\n\n  // Stores the input and output for the liquidity removal preview\n  const [tokensOut, setTokensOut] = React.useState([0, 0, 0]);\n\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n  const switchFields = () => {\n    setCoin1(coin2);\n    setCoin2(coin1);\n    setReserves(reserves.reverse());\n  };\n\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\n  const handleChange = {\n    field1: (e) => {\n      setField1Value(e.target.value);\n    },\n  };\n\n  // Turns the account's balance into something nice and readable\n  const formatBalance = (balance, symbol) => {\n    if (balance && symbol)\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Turns the coin's reserves into something nice and readable\n  const formatReserve = (reserve, symbol) => {\n    if (reserve && symbol) return reserve + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Determines whether the button should be enabled or not\n  const isButtonEnabled = () => {\n\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\n    const parsedInput = parseFloat(field1Value);\n    return (\n      coin1.address &&\n      coin2.address &&\n      parsedInput !== NaN &&\n      0 < parsedInput &&\n      parsedInput <= liquidityTokens\n    );\n  };\n\n  const remove = () => {\n    console.log(\"Attempting to remove liquidity...\");\n    setLoading(true);\n\n    removeLiquidity(\n      coin1.address,\n      coin2.address,\n      field1Value,\n      0,\n      0,\n      props.network.router,\n      props.network.account,\n      props.network.signer,\n      props.network.factory\n    )\n      .then(() => {\n        setLoading(false);\n\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n        setField1Value(\"\");\n        enqueueSnackbar(\"Removal Successful\", { variant: \"success\" });\n      })\n      .catch((e) => {\n        setLoading(false);\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\n          variant: \"error\",\n          autoHideDuration: 10000,\n        });\n      });\n  };\n\n  // Called when the dialog window for coin1 exits\n  const onToken1Selected = (address) => {\n    // Close the dialog window\n    setDialog1Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin2.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(\n        props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n        ).then((data) => {\n        setCoin1({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // Called when the dialog window for coin2 exits\n  const onToken2Selected = (address) => {\n    // Close the dialog window\n    setDialog2Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin1.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n        ).then((data) => {\n        setCoin2({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n  useEffect(() => {\n    console.log(\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\n    );\n\n    if (coin1.address && coin2.address && props.network.account) {\n      getReserves(\n        coin1.address,\n        coin2.address,\n        props.network.factory,\n        props.network.signer,\n        props.network.account).then(\n        (data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        }\n      );\n    }\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.signer]);\n\n  // This hook is called when either of the state variables `field1Value`, `coin1.address` or `coin2.address` change.\n  // It will give a preview of the liquidity removal.\n  useEffect(() => {\n    if (isButtonEnabled()) {\n      console.log(\"Trying to preview the liquidity removal\");\n      quoteRemoveLiquidity(\n        coin1.address,\n        coin2.address,\n        field1Value,\n        props.network.factory,\n        props.network.signer\n      ).then((data) => {\n        setTokensOut(data);\n      });\n    }\n  }, [coin1.address, coin2.address, field1Value, props.network.factory, props.network.signer]);\n\n  useEffect(() => {\n    // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n    // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n\n    const coinTimeout = setTimeout(() => {\n      console.log(\"Checking balances & Getting reserves...\");\n\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(\n          coin1.address,\n          coin2.address,\n          props.network.factory,\n          props.network.signer,\n          props.network.account\n        ).then((data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        });\n      }\n\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin1.address, props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin1({\n              ...coin1,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(props.network.account,\n          coin2.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin2({\n              ...coin2,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n    }, 10000);\n\n    return () => clearTimeout(coinTimeout);\n  });\n\n  return (\n    <div>\n      {/* Coin Swapper */}\n      <Typography variant=\"h5\" className={classes.title}></Typography>\n\n      {/* Dialog Windows */}\n      <CoinDialog\n        open={dialog1Open}\n        onClose={onToken1Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <CoinDialog\n        open={dialog2Open}\n        onClose={onToken2Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <WrongNetwork\n        open={wrongNetworkOpen}\n      />\n\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <Grid item xs={12} className={classes.fullWidth}>\n          <RemoveLiquidityField1\n            activeField={true}\n            value={field1Value}\n            onClick={() => setDialog1Open(true)}\n            onChange={handleChange.field1}\n            symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.fullWidth}>\n          <RemoveLiquidityField2\n            activeField={true}\n            onClick={() => setDialog2Open(true)}\n            symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={4}\n        className={classes.balance}\n      >\n        <hr className={classes.hr} />\n        <Grid\n          container\n          item\n          className={classes.values}\n          direction=\"column\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          {/* Balance Display */}\n          <Typography variant=\"h6\">Your Balances</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin1.balance, coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin2.balance, coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Reserves Display */}\n          <Typography variant=\"h6\">Reserves</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[0], coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[1], coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Liquidity Tokens Display */}\n          <Typography variant=\"h6\">Your Liquidity Pool Tokens</Typography>\n          <Grid container direction=\"row\" justifyContent=\"center\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(liquidityTokens, \"UNI-V2\")}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Paper className={classes.paperContainer}>\n          {/*Red  Display to show the quote */}\n          <Grid\n            container\n            item\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={2}\n            className={classes.fullWidth}\n          >\n            {/* Tokens in */}\n            <Typography variant=\"h6\">Liquidity Pool Tokens in</Typography>\n            <Grid container direction=\"row\" justifyContent=\"center\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(tokensOut[0], \"UNI-V2\")}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            {/* Liquidity Tokens Display */}\n            <Typography variant=\"h6\">Tokens Out</Typography>\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(tokensOut[1], coin1.symbol)}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(tokensOut[2], coin2.symbol)}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n        <hr className={classes.hr} />\n      </Grid>\n\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <LoadingButton\n          loading={loading}\n          valid={isButtonEnabled()}\n          success={false}\n          fail={false}\n          onClick={remove}\n        >\n          <ArrowDownwardIcon className={classes.buttonIcon} />\n          Remove\n        </LoadingButton>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LiquidityRemover;\n","import React from \"react\";\nimport {\n  Container,\n  Grid,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\n\nimport SwitchButton from \"./SwitchButton\";\nimport LiquidityDeployer from \"./LiquidityDeployer\";\nimport LiquidityRemover from \"./RemoveLiquidity\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(1),\n    paddingBottom: theme.spacing(3),\n    maxWidth: 700,\n    margin: \"auto\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  footer: {\n    marginTop: \"155px\",\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction Liquidity(props) {\n  const classes = useStyles();\n\n  const [deploy, setDeploy] = React.useState(true);\n\n  const deploy_or_remove = (deploy) => {\n    if (deploy === true) {\n      return <LiquidityDeployer network={props.network}/>;\n    }\n    return <LiquidityRemover network={props.network}/>;\n  };\n\n  return (\n    <div>\n      <Container>\n        <Paper className={classes.paperContainer}>\n          <Typography variant=\"h5\" className={classes.title}>\n            <SwitchButton setDeploy={setDeploy} />\n          </Typography>\n\n          {deploy_or_remove(deploy)}\n        </Paper>\n      </Container>\n\n      <Grid\n        container\n        className={classes.footer}\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"flex-end\"\n      >\n        <p>\n          Alternative Uniswap Interface | Get AUT for use in the bakerloo testnet{\" \"}\n          <a href=\"https://faucet.bakerloo.autonity.network/\">here</a>\n        </p>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Liquidity;\n","import React from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport Web3Provider from \"./network\";\nimport NarBar from \"./NavBar/NavBar\";\nimport biconomyConnect from \"./Components/SmartAccountConnect\";\nimport CoinSwapper from \"./CoinSwapper/CoinSwapper\";\nimport { Route } from \"react-router-dom\";\nimport { SnackbarProvider } from \"notistack\";\nimport Liquidity from \"./Liquidity/Liquidity\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ff0000\",\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      main: \"#9e9e9e\",\n      contrastText: \"#ffffff\",\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <SnackbarProvider maxSnack={3}>\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            render={(network) => (\n              <div>\n                <NarBar />\n                <Route exact path=\"/Alternative-Uniswap-Interface/\">\n                  <CoinSwapper network={network} />\n                </Route>\n\n                <Route exact path=\"/Alternative-Uniswap-Interface/liquidity\">\n                  <Liquidity network={network} />\n                </Route>\n              </div>\n            )}\n          ></Web3Provider>\n        </ThemeProvider>\n      </SnackbarProvider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}